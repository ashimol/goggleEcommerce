<!DOCTYPE html>
<html lang="zxx">

<head>
	<title>Goggles Ecommerce Category Bootstrap responsive Web Template | Home :: w3layouts</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta charset="utf-8">
	<meta name="keywords" content="Goggles a Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, 
Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
	<script>
		addEventListener("load", function () {
			setTimeout(hideURLbar, 0);
		}, false);

		function hideURLbar() {
			window.scrollTo(0, 1);
		}
	</script>
	<link href="/css/bootstrap.css" rel='stylesheet' type='text/css' />
	<link href="/css/login_overlay.css" rel='stylesheet' type='text/css' />
	<link href="/css/style6.css" rel='stylesheet' type='text/css' />
	<link rel="stylesheet" href="/css/shop.css" type="text/css" />
	<link rel="stylesheet" href="/css/owl.carousel.css" type="text/css" media="all">
	<link rel="stylesheet" href="/css/owl.theme.css" type="text/css" media="all">
	<link href="/css/style.css" rel='stylesheet' type='text/css' />
	<link href="/css/fontawesome-all.css" rel="stylesheet">
	<link href="//fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet">
	<link href="//fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800"
	    rel="stylesheet">
		<style>
			.dropdown{
				position: relative;
				display: inline-block;
			}
			.dropdown-content{
				display: none;
				position: absolute;
				background-color: aqua;
				min-width: 160px;
				box-shadow: 0px 8px 16px 6px rgba(0, 0, 0,2);
				z-index: 1000;
				right: 0;

			}
			.dropdown-content a {
				color: black;
				padding: 12px 16px;
				text-decoration: none;
				display: block;
				width: 100%;
			}
			.dropdown-content a:hover{
				background-color:whitesmoke;
			}
			.dropdown:hover .dropdown-content{
				display: block;
			}
			.header{
				position: relative;
				z-index: 500;
			}



            /* General button styles */
button {
    font-family: Arial, sans-serif;
    font-size: 14px;
    font-weight: bold;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

/* Specific styles for the Pay Now button */
#payNowBtn {
    background-color: #28a745; /* Green */
    color: white;
}
#payNowBtn:hover {
    background-color: #218838; /* Darker green on hover */
}

/* Specific styles for the Download Invoice button */
#downloadInvoiceBtn {
    background-color: #ffc107; /* Yellow */
    color: #212529; /* Dark text for contrast */
}
#downloadInvoiceBtn:hover {
    background-color: #e0a800; /* Darker yellow on hover */
}

/* Additional generic styles for hover and focus states */
button:focus {
    outline: 2px solid #0056b3; /* Highlight button when focused */
    outline-offset: 2px;
}
button:disabled {
    background-color: #d6d6d6; /* Gray for disabled buttons */
    color: #a1a1a1;
    cursor: not-allowed;
}

		</style>
</head>
<body>
	<div class="banner-top container-fluid" id="home"> 
		<!-- header -->
<%- include("../../views/partials/user/header") %>
<div class="banner_inner">
    <div class="services-breadcrumb">
      <div class="inner_breadcrumb">
  
        <ul class="short">
          <li>
            <a href="/">Home</a>
            <i>|</i>
          </li>
          <li>
            <a href="/userprofile">Profile</a>
            <i>|</i>
          </li>
          <li>
            <a href="/user/my-order">orders</a>
            <i>|</i>
          </li>
          <li>order details</li>
        </ul>
      </div>
    </div>
  
  </div>
<div class="container mt-4">
    <h1 class="mb-4">Order Details</h1>

    <% if (order) { %>
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Order ID: <%= order.orderId %></h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Delivery Address</h6>
                        <% if (order.addressId) { %>
                            <p>
                                <%= order.addressId.house %>,<br>
                                <%= order.addressId.city %>,<br>
                                <%= order.addressId.landMark %>,<br>
                                <%= order.addressId.contactNo %>,<br>
                                <%= order.addressId.state %> - <%= order.addressId.pin %>
                            </p>
                        <% } else { %>
                            <p>Address not available</p>
                        <% } %>
                    </div>
                    <div class="col-md-6">
                        <h6>Order Details</h6>
                        <p>Order Date: <%= order.orderDate.toLocaleDateString() %></p>
                        <p>Payment Method: <%= order.payment[0].method %></p>
                        <h6>Payment Status</h6> 
                        <% if (order.payment && order.payment.length > 0) { %>
                            <p>
                              <span><%= order.payment[0].status %></span>
                              <% if (order.payment[0].status === 'pending' && order.payment[0].method !== 'Cash On Delivery' && selectedItem.itemOrderStatus !== 'Cancelled') { %>
                                <button id="payNowBtn" class="btn btn-success" style="margin-left: 10px;" data-order-id="<%= order.orderId %>" data-razorpay-order-id="<%= order.payment[0].razorpayOrderId %>">
                                  Pay Now
                                </button>
                              <% } %>
                            </p>
                          <% } else { %>
                            <p>No payment status found</p>
                          <% } %>
                        
                        <p>Order Status:
                        <% if (selectedItem) { %>
                            <span class="badge 
                                <% if (selectedItem.itemOrderStatus === 'Pending') { %>
                                    badge-warning
                                <% } else if (selectedItem.itemOrderStatus === 'Completed') { %>
                                    badge-success
                                <% } else { %>
                                    badge-secondary
                                <% } %>
                            ">
                                <%= selectedItem.itemOrderStatus %>
                            </span>
                        <% } else { %>
                            <span>Selected item not found</span>
                        <% } %>
                        </p>

                        <p>Total Amount: â‚¹<%= order.totalAmount.toFixed(2) %></p>
                        <div class="col-md-4">
                            <% if (selectedItem.itemOrderStatus === 'Delivered') { %>
                              <h5>More actions</h5>
                                <button class="btn btn-warning mb-2" id="downloadInvoiceBtn" 
                                        data-order-id="<%= order._id %>" 
                                        data-item-id="<%= selectedItem.itemOrderId %>">
                                    <i class="fas fa-download"></i> Download Invoice
                                </button>
                              <% } %>
                            </div>
                    </div>
                    
                </div>
                <hr>
                <h6>Ordered Items</h6>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Product Image</th>
                                <th>Product Name</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% order.items.forEach((item) => { %>
                                <tr>
                                    <td>
                                        <% if (item.productId && item.productId.productImage && item.productId.productImage.length > 0) { %>
                                            <img 
                                                src="/uploads/re-images/<%= item.productId.productImage[0] %>" 
                                                alt="Product Image" 
                                                class="img-thumbnail" 
                                                style="width: 100px; height: 100px; object-fit: cover;"
                                            >
                                        <% } else { %>
                                            <img 
                                                src="/uploads/re-images/placeholder.jpg" 
                                                alt="No Image" 
                                                class="img-thumbnail" 
                                                style="width: 100px; height: 100px; object-fit: cover;"
                                            >
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (item.productId) { %>
                                            <%= item.productId.productName %>
                                        <% } else { %>
                                            Product Unavailable
                                        <% } %>
                                    </td>
                                    <td><%= item.quantity %></td>
                                    <td>â‚¹<%= item.productId.salePrice.toFixed(2) %></td>
                                    <td>â‚¹<%= (item.productId.salePrice * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    <% } else { %>
        <div class="alert alert-info" role="alert">
            Order details not available.
        </div>
    <% } %>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
   // Payment button click handler
   document.addEventListener('DOMContentLoaded', function() {
    const payNowBtn = document.getElementById('payNowBtn');
    if (!payNowBtn) {
        console.log('Pay Now button not found');
        return;
    }

    payNowBtn.addEventListener('click', function() {
        const orderId = this.getAttribute('data-order-id');
        const razorpayOrderId = this.getAttribute('data-razorpay-order-id');
        
        console.log('Button clicked with Order ID:', orderId);
        console.log('Button clicked with Razorpay Order ID:', razorpayOrderId);

        fetch('/my-order/order-details', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({ 
                orderId: orderId, 
                razorpayOrderId: razorpayOrderId 
            })
        })
        .then(response => response.json())
        .then(data => {
            console.log('Order details received:', data);
            
            if (!data.success) {
                throw new Error(data.message || 'Failed to get order details');
            }

            // Initialize Razorpay payment
            const options = {
                key: data.razorpayOrder.key,
                amount: data.razorpayOrder.amount,
                currency: data.razorpayOrder.currency,
                order_id: data.razorpayOrder.id,
                name: "Goggles",
                description: "Order Payment",
                handler: function(response) {
                    verifyPayment(response, orderId);
                },
                modal: {
                    ondismiss: function() {
                        console.log('Payment modal dismissed');
                    }
                },
                theme: {
                    color: "#3399cc"
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        })
        .catch(error => {
            console.error('Payment initialization error:', error);
            alert('Failed to initialize payment. Please try again.');
        });
    });
});

function verifyPayment(response, orderId) {
    console.log('Verifying payment...', response);
    
    fetch('/verify-payment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
            orderId: orderId
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Payment verified successfully');
            // window.location.href = '/user/order-confirmation';
            window.location.href = `/orderConfirmation/${data.orderId}`;
        } else {
            throw new Error(data.message || 'Payment verification failed');
        }
    })
    .catch(error => {
        console.error('Payment verification error:', error);
        alert('Payment verification failed. Please contact support if amount was deducted.');
Â Â Â Â });
}
// Handle payment modal dismissal
function handlePaymentDismissal() {
    console.log('Payment modal was dismissed');
    // Add any cleanup or user notificationÂ logicÂ here
}
    </script>



<script>
   document.getElementById("downloadInvoiceBtn").addEventListener("click", function () {
    const orderId = this.getAttribute("data-order-id");
    const itemId = this.getAttribute("data-item-id");

   
    fetch(`/my-order/${orderId}/invoice/${itemId}`, {
          method: 'GET',
          headers: {
              'Accept': 'application/pdf',
          },
      })
      .then(response => response.blob())
      .then(blob => {
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.style.display = 'none';
          a.href = url;
          a.download = `Invoice-${orderId}.pdf`;
          document.body.appendChild(a);
          a.click();
          window.URL.revokeObjectURL(url);
      })
      .catch(error => console.error('Error:', error));
    });
   

    </script>


<%- include("../../views/partials/user/footer") %>