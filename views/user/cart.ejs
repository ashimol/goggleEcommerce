<!DOCTYPE html>
<html lang="zxx">

<head>
    <title>Goggles Ecommerce Category Bootstrap responsive Web Template | Home :: w3layouts</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta name="keywords" content="Goggles a Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, 
Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
    <script>
        addEventListener("load", function () {
            setTimeout(hideURLbar, 0);
        }, false);

        function hideURLbar() {
            window.scrollTo(0, 1);
        }
    </script>
    <link href="/css/bootstrap.css" rel='stylesheet' type='text/css' />
    <link href="/css/login_overlay.css" rel='stylesheet' type='text/css' />
    <link href="/css/style6.css" rel='stylesheet' type='text/css' />
    <link rel="stylesheet" href="/css/shop.css" type="text/css" />
    <link rel="stylesheet" href="/css/owl.carousel.css" type="text/css" media="all">
    <link rel="stylesheet" href="/css/owl.theme.css" type="text/css" media="all">
    <link href="/css/style.css" rel='stylesheet' type='text/css' />
    <link href="/css/fontawesome-all.css" rel="stylesheet">
    <link href="//fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet">
    <link href="//fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800"
        rel="stylesheet">
    <!-- Include SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <!-- Include SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>



			.dropdown{
				position: relative;
				display: inline-block;
			}
			.dropdown-content{
				display: none;
				position: absolute;
				background-color: aqua;
				min-width: 160px;
				box-shadow: 0px 8px 16px 6px rgba(0, 0, 0,2);
				z-index: 1000;
				right: 0;

			}
			.dropdown-content a {
				color: black;
				padding: 12px 16px;
				text-decoration: none;
				display: block;
				width: 100%;
			}
			.dropdown-content a:hover{
				background-color:whitesmoke;
			}
			.dropdown:hover .dropdown-content{
				display: block;
			}
			.header{
				position: relative;
				z-index: 500;
			}
       body {
    font-family: Roboto, Arial, sans-serif;
    background-color: #f1f3f6;
    margin: 0;
    padding: 0;
}

.cart-page {
    max-width: 1240px;
    margin: 20px auto;
    display: flex;
    gap: 20px;
    padding: 0 20px;
}

.cart-items {
    flex: 1;
    background: #fff;
    border-radius: 2px;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
    padding: 16px;
}

.cart-items header h1 {
    font-size: 18px;
    font-weight: 500;
    color: #212121;
    padding-bottom: 16px;
    border-bottom: 1px solid #f0f0f0;
    margin: 0 0 20px 0;
}

.cart-item {
    display: flex;
    padding: 16px 0;  /* Reduced padding */
    border-bottom: 1px solid #f0f0f0;
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item img {
    width: 80px;     /* Reduced from 112px */
    height: 80px;    /* Reduced from 112px */
    object-fit: contain;
    margin-right: 16px;  /* Reduced from 24px */
}

.item-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.item-details p {
    margin: 0 0 6px 0;  /* Reduced margin */
}

.item-details strong {
    font-size: 14px;
    color: #212121;
    display: block;
    margin-bottom: 4px;
}

.item_price {
    color: #212121;
    font-size: 16px;  /* Reduced from 18px */
    font-weight: 500;
    margin-right: 8px;
}

strike {
    color: #878787;
    font-size: 14px;
}

.button-container {
    display: flex;
    align-items: center;
    justify-content: space-between; /* Changed from gap property to space-between */
    margin-top: 12px;
    width: 100%; /* Ensure container takes full width */
}

.quantity-buttons {
    display: flex;
    align-items: center;
}
.quantity-buttons button {
    width: 24px;      /* Reduced from 28px */
    height: 24px;     /* Reduced from 28px */
    border-radius: 50%;
    background: linear-gradient(#fff, #f9f9f9);
    border: 1px solid #c2c2c2;
    cursor: pointer;
    font-size: 14px;  /* Reduced from 16px */
    display: flex;
    align-items: center;
    justify-content: center;
}

.quantity-display {
    background: none !important;
    border: none !important;
    width: 35px !important;  /* Reduced from 45px */
    text-align: center;
    font-size: 14px;
    color: #212121;
}

.btn-danger {
    color: #2874f0;
    font-size: 14px;  /* Reduced from 16px */
    font-weight: 500;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
}

/* Cart Summary Styles */
.cart-summary {
    width: 320px;
    background: #fff;
    border-radius: 2px;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
    padding: 16px;
    height: fit-content;
}

.cart-summary h3 {
    font-size: 16px;
    font-weight: 500;
    color: #878787;
    padding-bottom: 12px;
    border-bottom: 1px solid #f0f0f0;
    margin: 0 0 16px 0;
}

.summary-item {
    display: flex;
    justify-content: space-between;
    padding: 12px 0;
    font-size: 14px;
    color: #212121;
}

.summary-total {
    display: flex;
    justify-content: space-between;
    padding: 16px 0;
    font-size: 16px;
    font-weight: 500;
    color: #212121;
    border-top: 1px dashed #e0e0e0;
    margin-top: 16px;
}

.place-order {
    width: 100%;
    background: #fb641b;
    color: #fff;
    padding: 14px;  /* Reduced from 16px */
    font-size: 16px;
    font-weight: 500;
    border: none;
    border-radius: 2px;
    cursor: pointer;
    margin-top: 16px;
}

.place-order:hover {
    background: #fb641b;
    opacity: 0.95;
}

.button-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 12px;
}

.quantity-buttons {
    display: flex;
    align-items: center;
    border: 1px solid #e0e0e0;
    border-radius: 20px;
    overflow: hidden;
}

.quantity-buttons button {
    width: 35px;
    height: 35px;
    background-color: white;
    border: none;
    cursor: pointer;
    font-size: 18px;
    font-weight: bold;
    color: #2874f0;
    transition: background-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.quantity-buttons button:hover {
    background-color: #f0f0f0;
}

.quantity-buttons .btn-primary {
    background-color: transparent;
}

.quantity-display {
    width: 50px;
    text-align: center;
    font-size: 16px;
    font-weight: bold;
    color: #212121;
    border: none;
    background: none;
}
/* Responsive Adjustments */
@media (max-width: 768px) {
    .cart-page {
        flex-direction: column;
        padding: 12px;
    }

    .cart-summary {
        width: auto;
        margin-top: 20px;
    }

    .cart-item img {
        width: 60px;    /* Even smaller for mobile */
        height: 60px;   /* Even smaller for mobile */
    }

    .button-container {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
    }
}
    </style>
</head>

<body>
    <div class="banner-top container-fluid" id="home">
        <!-- header -->
        <%-include("../../views/partials/user/header")%>
        <!-- banner -->
        <div class="banner_inner">
            <div class="services-breadcrumb">
                <div class="inner_breadcrumb">
                    <ul class="short">
                        <li>
                            <a href="/">Home</a>
                            <i>|</i>
                        </li>
                        <li>cart</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="cart-page">
        <section class="cart-items">
            <header>
                <h1>Your Shopping Cart</h1>
            </header>
            <% if (cart && cart.items.length > 0) { %>
                <% cart.items.forEach(item => { %>
                    <div class="cart-item">
                        <img src="/uploads/re-images/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                        <div class="item-details">
                            <p><strong><%= item.productId.productName %></strong></p>
                            <p>
                                <% if (item.productId.salePrice < item.productId.regularPrice) { %>
                                    <span class="item_price">₹<%= item.productId.salePrice %></span>
                                   <strike>₹<%= item.productId.regularPrice %></strike>
                                <% } else { %>
                                    <span class="item_price">₹<%= item.productId.regularPrice %></span>
                                <% } %>
                            </p>
                            <!-- <p>Quantity: <%= item.quantity %></p> -->
                            <div class="button-container">
                                <form id="updateQuantityForm-<%= item.productId._id %>" onsubmit="return false;">
                                    <input type="hidden" name="productId" value="<%= item.productId._id %>">
                                    <div class="quantity-buttons">
                                        <button type="button" class="btn btn-primary" onclick="updateQuantity('<%= item.productId._id %>', -1)"> - </button>
                                        <button type="button" class="btn btn-primary quantity-display"><%= item.quantity %></button>
                                        <button type="button" class="btn btn-primary" onclick="updateQuantity('<%= item.productId._id %>', 1)"> + </button>
                                    </div>
                                </form>
                                <form id="removeItemForm-<%= item.productId._id %>" onsubmit="return false;">
                                    <input type="hidden" name="productId" value="<%= item.productId._id %>">
                                    <button type="button" class="btn btn-danger" onclick="removeFromCart('<%= item.productId._id %>')">REMOVE</button>
                                </form>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p>Your cart is empty.</p>
            <% } %>
        </section>

        <div class="cart-summary">
            <h3>PRICE DETAILS</h3>
            <div class="summary-item">
                <span>Total price</span>
                <span>₹<%= (totalPrice).toFixed(2) %></span>
            </div>
            <div class="summary-item">
                <span>Discount</span>
                <span>-₹<%= Math.round(totalDiscount) || 0 %></span>
            </div>
            <div class="summary-item">
                <span>Delivery Charges</span>
                <span><%= deliveryCharges ? `₹${deliveryCharges}` : 'Free' %></span>
            </div>
            <div class="summary-total">
                <span>Total Amount</span>
                <span>₹ <%= Math.round(totalAmount) %></span>
            </div>
            <!-- <a href="" id="checkout-link" class="place-order-btn">
                <button class="place-order">Place Order</button>
            </a> -->
            

            <a href="#" id="checkout-link"  class="place-order-btn">
                             
                <button type="submit" class="place-order">Place Order</button>
            <!-- </form> -->
        </div>
    </div>

    <%-include("../../views/partials/user/footer")%>

    <script>
        document.querySelectorAll(".increment-btn, .decrement-btn").forEach(button => {
    button.addEventListener("click", async (event) => {
        const productId = event.target.getAttribute("data-id");
       
        const isIncrement = event.target.classList.contains("increment-btn");

        const quantityInput = event.target.parentNode.querySelector("input");
        let quantity = parseInt(quantityInput.value);

        if (isIncrement) {
            quantity++;
        } else if (quantity > 1) {
            quantity--;
        } else {
            
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Quantity',
                text: 'Quantity must be at least 1',
            });
            return;
        }

        try {
            const response = await fetch("/update-cart-quantity", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ productId, quantity }),
            });

            const result = await response.json();

            if (response.ok) {
                quantityInput.value = quantity;
                
                // document.querySelector(".cart__price").innerText = `Rs.${result.cart.items.find(
                //     item => item.productId === productId && item.size === size
                // ).totalPrice}`;
               
                const item = result.cart.items.find(
                    item => item.productId === productId && item.size === size
                );

                // Update the subtotal and total prices
                document.querySelector(`[data-id="${productId}"]`)
                    .closest("tr")
                    .querySelector(".cart__price").innerText =` Rs.${item.totalPrice}`;

                
                document.querySelector("#cart-subtotal").innerText = `Rs.${result.cart.subtotal}`;
                document.querySelector("#cart-total").innerText =` Rs.${result.cart.total}`;


            } else {
                
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message,
                });
            }
        } catch (error) {
            console.error("Error updating cart:", error);
            
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while updating the cart.',
            });
        }
    });
});


    </script>



    <script>

        document.querySelector('#checkout-link').addEventListener('click', function(e) {
            e.preventDefault();
            const cartId = '<%= cart._id %>';
            window.location.href = `/cart/checkout/${cartId}`;
        });


        async function removeFromCart(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to remove this item from the cart?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, remove it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/cart/remove', { 
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ productId }) 
                        });
                        console.log('Product ID to remove:', productId);
                        const data = await response.json();

                        if (response.ok && data.success) {
                            Swal.fire('Removed!', 'The item has been removed from your cart.', 'success')
                            .then(() => {
                                location.reload(); 
                            });
                        } else {
                            Swal.fire('Failed', data.message || 'Failed to remove the item', 'error');
                        }
                    } catch (error) {
                        Swal.fire('Error', 'An error occurred while removing the item', 'error');
                        console.error('Error removing item:', error);
                    }
                }
            });
        }


        function updateQuantity(productId, change) {
            fetch('/cart/update-quantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
                },
                body: JSON.stringify({ 
                    productId, 
                    change,
                })
            })
            .then(response => response.json())
            .then(data => {
                if (!data.success) {
                    throw new Error(data.error);
                }
                
                // Update quantity display
                const form = document.querySelector(`#updateQuantityForm-${productId}`);
                if (form) {
                    const quantityDisplay = form.querySelector('.quantity-display');
                    if (quantityDisplay) {
                        quantityDisplay.textContent = data.updatedQuantity; // Update the displayed quantity
                    }
                }

                // Update cart summary with new calculations
                updateCartSummary(data.cartSummary);
                
                // Update quantity text
                const quantityText = document.querySelector(`#updateQuantityForm-${productId}`).parentNode.parentNode.querySelector('p:nth-child(3)');
                if (quantityText) {
                    quantityText.textContent = `Quantity: ${data.updatedQuantity}`;
                }
                
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Quantity updated',
                    showConfirmButton: false,
                    timer: 1500
                });
            })
            .catch(error => {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message,
                    showConfirmButton: false,
                    timer: 2000
                });
            }).then(() => {
                location.reload(); 
            });
        }


        function updateCartSummary(summary) {
    if (!summary) return;

    // Update total price
    const totalPriceElement = document.querySelector('.summary-item:first-child span:last-child');
    if (totalPriceElement) {
        totalPriceElement.textContent = `₹${summary.totalPrice.toFixed(2)}`;
    }

    // Update total discount
    const totalDiscountElement = document.querySelector('.summary-item:nth-child(2) span:last-child');
    if (totalDiscountElement) {
        totalDiscountElement.textContent = `-₹${summary.totalDiscount.toFixed(2)}`;
    }

    // Update delivery charges
    const deliveryChargesElement = document.querySelector('.summary-item:nth-child(3) span:last-child');
    if (deliveryChargesElement) {
        deliveryChargesElement.textContent = summary.deliveryCharges > 0 ? `₹${summary.deliveryCharges}` : 'Free';
    }

    // Update total amount (final price after discount)
    const totalAmountElement = document.querySelector('.summary-total span:last-child');
    if (totalAmountElement) {
        totalAmountElement.textContent = `₹${summary.totalAmount.toFixed(2)}`;
    }

    // Update the cart summary in the EJS template
    const cartSummaryElement = document.querySelector('.cart-summary');
    if (cartSummaryElement) {
        cartSummaryElement.innerHTML = `
            <h3>PRICE DETAILS</h3>
            <div class="summary-item">
                <span>Total price</span>
                <span>₹${summary.totalPrice.toFixed(2)}</span>
            </div>
            <div class="summary-item">
                <span>Discount</span>
                <span>-₹${summary.totalDiscount.toFixed(2)}</span>
            </div>
            <div class="summary-item">
                <span>Delivery Charges</span>
                <span>${summary.deliveryCharges > 0 ? `₹${summary.deliveryCharges}` : 'Free'}</span>
            </div>
            <div class="summary-total">
                <span>Total Amount</span>
                <span>₹${summary.totalAmount.toFixed(2)}</span>
            </div>
        `;
    }
}

       


    document.querySelector('#checkout-link').addEventListener('click', function(e) {
        e.preventDefault();
        const cartId = '<%= cart._id %>';
        window.location.href = `/cart/checkout/${cartId}`;
    });


        
    </script>
</body>
</html>