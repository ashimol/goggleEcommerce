<!DOCTYPE html>
<html lang="zxx">

<head>
	<title>Goggles Ecommerce Category Bootstrap responsive Web Template | Home :: w3layouts</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta charset="utf-8">
	<meta name="keywords" content="Goggles a Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template, 
Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
	<script>
		addEventListener("load", function () {
			setTimeout(hideURLbar, 0);
		}, false);

		function hideURLbar() {
			window.scrollTo(0, 1);
		}
	</script>
	<link href="/css/bootstrap.css" rel='stylesheet' type='text/css' />
	<link href="/css/login_overlay.css" rel='stylesheet' type='text/css' />
	<link href="/css/style6.css" rel='stylesheet' type='text/css' />
	<link rel="stylesheet" href="/css/shop.css" type="text/css" />
	<link rel="stylesheet" href="/css/owl.carousel.css" type="text/css" media="all">
	<link rel="stylesheet" href="/css/owl.theme.css" type="text/css" media="all">
	<link href="/css/style.css" rel='stylesheet' type='text/css' />
	<link href="/css/fontawesome-all.css" rel="stylesheet">
	<link href="//fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet">
	<link href="//fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800"
	    rel="stylesheet">
		<style>
			.dropdown{
				position: relative;
				display: inline-block;
			}
			.dropdown-content{
				display: none;
				position: absolute;
				background-color: aqua;
				min-width: 160px;
				box-shadow: 0px 8px 16px 6px rgba(0, 0, 0,2);
				z-index: 1000;
				right: 0;

			}
			.dropdown-content a {
				color: black;
				padding: 12px 16px;
				text-decoration: none;
				display: block;
				width: 100%;
			}
			.dropdown-content a:hover{
				background-color:whitesmoke;
			}
			.dropdown:hover .dropdown-content{
				display: block;
			}
			.header{
				position: relative;
				z-index: 500;
			}
		</style>

        <style>

            /* Order Page Styling */
body {
    background-color: #f4f7f6;
    font-family: 'Poppins', sans-serif;
}

.container.mt-4 {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 30px;
}

.table {
    border-collapse: separate;
    border-spacing: 0;
    border-radius: 8px;
    overflow: hidden;
}

.table thead {
    background-color: #f8f9fa;
}

.table thead th {
    font-weight: 600;
    color: #495057;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-bottom: 2px solid #dee2e6;
}

.table tbody tr {
    transition: background-color 0.3s ease;
}

.table tbody tr:hover {
    background-color: #f1f3f5;
}

.table td {
    vertical-align: middle;
    padding: 15px;
}

.img-thumbnail {
    border-radius: 6px;
    transition: transform 0.3s ease;
}

.img-thumbnail:hover {
    transform: scale(1.05);
}

.badge {
    font-weight: 500;
    padding: 0.5em 0.75em;
    border-radius: 4px;
}

.badge-warning {
    background-color: #ffc107;
    color: #212529;
}

.badge-success {
    background-color: #28a745;
    color: #ffffff;
}

.badge-secondary {
    background-color: #6c757d;
    color: #ffffff;
}

.btn-group .btn {
    margin: 0 5px;
    transition: all 0.3s ease;
    border-radius: 4px;
    font-weight: 500;
}

.btn-warning {
    background-color: #ffc107;
    border-color: #ffc107;
    color: #212529;
}

.btn-warning:hover {
    background-color: #e0a800;
    border-color: #d39e00;
}

.btn-cancel {
    background-color: #dc3545;
    border-color: #dc3545;
    color: #ffffff;
}

.btn-cancel:hover {
    background-color: #c82333;
    border-color: #bd2130;
}

.pagination {
    margin-top: 20px;
}

.pagination .page-item .page-link {
    color: #495057;
    background-color: #ffffff;
    border: 1px solid #dee2e6;
    margin: 0 5px;
    border-radius: 4px;
    transition: all 0.3s ease;
}

.pagination .page-item.active .page-link {
    background-color: #007bff;
    border-color: #007bff;
    color: #ffffff;
}

.pagination .page-link:hover {
    background-color: #f1f3f5;
    color: #007bff;
}

.alert-info {
    background-color: #e9ecef;
    border-color: #dee2e6;
    color: #495057;
    border-radius: 6px;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .table-responsive {
        font-size: 0.9rem;
    }

    .btn-group .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
}

/* Custom Scrollbar */
::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f3f5;
}

::-webkit-scrollbar-thumb {
    background: #6c757d;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #495057;
}

        </style>
</head>
<body>
	<div class="banner-top container-fluid" id="home"> 
		<!-- header -->
<%- include("../../views/partials/user/header") %>

<div class="banner_inner">
    <div class="services-breadcrumb">
      <div class="inner_breadcrumb">
  
        <ul class="short">
          <li>
            <a href="/">Home</a>
            <i>|</i>
          </li>
          <li>
            <a href="/userprofile">Profile</a>
            <i>|</i>
          </li>
          <li>Orders</li>
        </ul>
      </div>
    </div>
  
  </div>
<div class="container mt-4">
    <h1 class="mb-4">Your Orders</h1>

    <% if (orders && orders.length > 0) { %>
        <div class="row">
            <div class="col-12">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Product Image</th>
                                <th>Product Name</th>
                                <th>Total Price</th>
                                <th>Quantity</th>
                                <th>Status</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach((order) => { %>
                                <% order.items.forEach((item) => { %>
                                    <tr>
                                        <td>
                                            <% if (item.productId && item.productId.productImage && item.productId.productImage.length > 0) { %>
                                                <img 
                                                    src="/uploads/re-images/<%= item.productId.productImage[0] %>" 
                                                    alt="Product Image" 
                                                    class="img-thumbnail" 
                                                    style="width: 100px; height: 100px; object-fit: cover;"
                                                >
                                                <div class="small text-muted">Order: <%= order.orderId %></div>
                                            <% } else { %>
                                                <img 
                                                    src="/uploads/re-images/placeholder.jpg" 
                                                    alt="No Image" 
                                                    class="img-thumbnail" 
                                                    style="width: 100px; height: 100px; object-fit: cover;"
                                                >
                                            <% } %>
                                        </td>
                                        
                                        <td>
                                            <% if (item.productId) { %>
                                                <%= item.productId.productName %>
                                            <% } else { %>
                                                Product Unavailable
                                            <% } %>
                                        </td>
                                        <td>â‚¹<%= (item.price * item.quantity).toFixed(2) %></td>
                                        <td><%= item.quantity %></td>
                                        <td>
                                            <span class="badge 
                                                <% if (item.itemOrderStatus === 'Pending') { %>
                                                    badge-warning
                                                <% } else if (item.itemOrderStatus === 'Completed') { %>
                                                    badge-success
                                                <% } else if (item.itemOrderStatus === 'Cancelled') { %>
                                                    badge-danger
                                                <% } else { %>
                                                    badge-secondary
                                                <% } %>
                                            ">
                                                <%= item.itemOrderStatus %>
                                            </span>
                                        </td>
                                        <td><%= order.orderDate.toLocaleDateString() %></td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a href="/my-order/order-details/<%= order.orderId %>/<%= item.productId._id %>" class="btn btn-info btn-sm">
                                                    View Order
                                                </a>
                                                
                                                <% if (item.itemOrderStatus !== 'Cancelled' && 
                                                   item.itemOrderStatus !== 'Delivered' && 
                                                   item.itemOrderStatus !== 'Return Requested' && 
                                                   item.itemOrderStatus !== 'Return Approved' && 
                                                   item.itemOrderStatus !== 'Return Rejected' && 
                                                   item.itemOrderStatus !== 'Returned') { %>
                                                    <button class="btn btn-danger btn-sm cancel-order" 
                                                            data-itemorderid="<%= item.itemOrderId %>">
                                                          
                                                        Cancel Order
                                                    </button>
                                                <% } %>
                                                
                                                <% if (item.itemOrderStatus === 'Delivered') { %>
                                                    <button class="btn btn-primary btn-sm return-order" 
                                                            data-itemorderid="<%= item.itemOrderId %>"
                                                            data-orderid="<%= order.orderId %>">
                                                        Return Order
                                                    </button>
                                                <% } %>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    
    

        

        <!-- Pagination -->
        <% if (totalPages > 1) { %>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <% if (currentPage > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                        </li>
                    <% } %>

                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>

                    <% if (currentPage < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        <% } %>

    <% } else { %>
        <div class="alert alert-info" role="alert">
            You have no orders yet. Start shopping to see your order history!
        </div>
    <% } %>
</div>




<div>


</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    document.querySelectorAll('.cancel-order').forEach(button => {
    button.addEventListener('click', function(event) {
        event.preventDefault();
        const itemOrderId = this.getAttribute('data-itemOrderId');
        
        if (!itemOrderId) {
            console.error('No itemOrderId found on button');
            Swal.fire('Error!', 'Invalid order item', 'error');
            return;
        }

        Swal.fire({
            title: 'Cancel Reason',
            input: 'text',
            inputPlaceholder: 'Enter your reason for cancellation...',
            showCancelButton: true,
            confirmButtonText: 'Cancel Item',
            cancelButtonText: 'Close',
            preConfirm: (cancelReason) => {
                if (!cancelReason) {
                    Swal.showValidationMessage('You need to enter a reason for cancellation!');
                }
                return cancelReason;
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const cancelReason = result.value;
                const url = `/user/my-order/cancel/${itemOrderId}/${encodeURIComponent(cancelReason)}`;
                
                console.log('Sending cancellation request:', {
                    url,
                    itemOrderId,
                    cancelReason
                });

                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(async response => {
                    const data = await response.json();
                    
                    if (!response.ok) {
                        throw new Error(data.message || 'Server error');
                    }
                    
                    return data;
                })
                .then(data => {
                    console.log('Cancellation successful:', data);
                    Swal.fire(
                        'Cancelled!',
                        'Your item has been cancelled.',
                        'success'
                    ).then(() => {
                        location.reload();
                    });
                })
                .catch(error => {
                    console.error('Cancellation error:', error);
                    Swal.fire('Error!', error.message || 'There was an error cancelling your item.', 'error');
                });
            }
       Â });
Â Â Â Â });
});
</script>


<script>

    document.querySelectorAll('.return-order').forEach(button => {

    button.addEventListener('click', function(event) {

        event.preventDefault();

        const orderId = this.getAttribute('data-id');

        Swal.fire({

            title: 'Return Order',
            input: 'textarea',
            inputLabel: 'Return Reason',
            inputPlaceholder: 'Please provide a reason for returning...',
            inputValidator: (value) => {
                if (!value?.trim()) {
                    return 'You must enter a reason for return';
                }
            },
            showCancelButton: true,
            confirmButtonText: 'Submit Return',
            cancelButtonText: 'Cancel',
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/my-order/return/' + itemOrderId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        returnReason: result.value
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: 'Success',
                            text: data.message,
                            icon: 'success'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error',
                        text: error.message || 'Failed to submit return request',
                        icon: 'error'
                    });
                });
            }
        });
    });
});

</script> 

<%- include("../../views/partials/user/footer") %>